collection_reader:
  class_name: com.groupon.nakala.db.TsvIdentifiableTextCollectionReader # or any of its subclasses
  parameters:
    file_name: <path_to_test_data>
    separator: \t
    id_field: 0 # 0-based index. In case of database fields, you can use field name.
    text_field: 2 # 0-based index. In case of database fields, you can use field name.

collection_analyzer:
  class_name: com.groupon.ml.ClassifierCollectionAnalyzer
  parameters:
    analyzer:
      class_name: com.groupon.ml.svm.LibSvmTextClassifierier
      parameters:
#        threshold: 0.25 # threshold for a score to be considered
        model:
          file_name: <path_to_model_file>
#          resource: <path_to_model_file>
        labels:
          file_name:
#          resource: /labels.txt
        representer:
          class_name: com.groupon.nakala.core.TfFeatureWeightTextRepresenter
          parameters:
            normalize_by_length: true
            features:
              file_name: <path_to_features>
#              resource: <path_to_features>
            tokenizer:
              class_name: com.groupon.nakala.core.RegexpTokenizerStream
            normalizers:
              - class_name: com.groupon.nakala.normalization.MarkupRemover
              - class_name: com.groupon.nakala.normalization.CaseNormalizer
              - class_name: com.groupon.nakala.normalization.NumberNormalizer
            # Provide the range file generated by libsvm here
            scaler:
              file_name: <path_to_range_file>
#              resource: <path_to_range_file>

data_stores:
  - class_name: com.groupon.nakala.db.FlatFileStore
    parameters:
      file_name: <path_to_tsv_output>
